{"version":3,"file":"components.a1eaa061.js","sources":["../../../../node_modules/nuxt/dist/head/runtime/components.mjs"],"sourcesContent":["import { defineComponent } from \"vue\";\nimport { useHead } from \"./composables.mjs\";\nconst removeUndefinedProps = (props) => Object.fromEntries(Object.entries(props).filter(([, value]) => value !== void 0));\nconst setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {\n  useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));\n  return () => renderChild ? ctx.slots.default?.() : null;\n};\nconst globalProps = {\n  accesskey: String,\n  autocapitalize: String,\n  autofocus: {\n    type: Boolean,\n    default: void 0\n  },\n  class: [String, Object, Array],\n  contenteditable: {\n    type: Boolean,\n    default: void 0\n  },\n  contextmenu: String,\n  dir: String,\n  draggable: {\n    type: Boolean,\n    default: void 0\n  },\n  enterkeyhint: String,\n  exportparts: String,\n  hidden: {\n    type: Boolean,\n    default: void 0\n  },\n  id: String,\n  inputmode: String,\n  is: String,\n  itemid: String,\n  itemprop: String,\n  itemref: String,\n  itemscope: String,\n  itemtype: String,\n  lang: String,\n  nonce: String,\n  part: String,\n  slot: String,\n  spellcheck: {\n    type: Boolean,\n    default: void 0\n  },\n  style: String,\n  tabindex: String,\n  title: String,\n  translate: String\n};\nexport const NoScript = defineComponent({\n  name: \"NoScript\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    title: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const noscript = { ...props };\n    const textContent = (slots.default?.() || []).filter(({ children }) => children).map(({ children }) => children).join(\"\");\n    if (textContent) {\n      noscript.children = textContent;\n    }\n    return {\n      noscript: [noscript]\n    };\n  })\n});\nexport const Link = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Link\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    as: String,\n    crossorigin: String,\n    disabled: Boolean,\n    fetchpriority: String,\n    href: String,\n    hreflang: String,\n    imagesizes: String,\n    imagesrcset: String,\n    integrity: String,\n    media: String,\n    prefetch: {\n      type: Boolean,\n      default: void 0\n    },\n    referrerpolicy: String,\n    rel: String,\n    sizes: String,\n    title: String,\n    type: String,\n    /** @deprecated **/\n    methods: String,\n    /** @deprecated **/\n    target: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((link) => ({\n    link: [link]\n  }))\n});\nexport const Base = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Base\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    href: String,\n    target: String\n  },\n  setup: setupForUseMeta((base) => ({\n    base\n  }))\n});\nexport const Title = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Title\",\n  inheritAttrs: false,\n  setup: setupForUseMeta((_, { slots }) => {\n    const title = slots.default?.()?.[0]?.children || null;\n    if (process.dev && title && typeof title !== \"string\") {\n      console.error(\"<Title> can only take a string in its default slot.\");\n    }\n    return {\n      title\n    };\n  })\n});\nexport const Meta = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Meta\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    charset: String,\n    content: String,\n    httpEquiv: String,\n    name: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props) => {\n    const meta = { ...props };\n    if (meta.httpEquiv) {\n      meta[\"http-equiv\"] = meta.httpEquiv;\n      delete meta.httpEquiv;\n    }\n    return {\n      meta: [meta]\n    };\n  })\n});\nexport const Style = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Style\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    type: String,\n    media: String,\n    nonce: String,\n    title: String,\n    /** @deprecated **/\n    scoped: {\n      type: Boolean,\n      default: void 0\n    },\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const style = { ...props };\n    const textContent = slots.default?.()?.[0]?.children;\n    if (textContent) {\n      if (process.dev && typeof textContent !== \"string\") {\n        console.error(\"<Style> can only take a string in its default slot.\");\n      }\n      style.children = textContent;\n    }\n    return {\n      style: [style]\n    };\n  })\n});\nexport const Head = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Head\",\n  inheritAttrs: false,\n  setup: (_props, ctx) => () => ctx.slots.default?.()\n});\nexport const Html = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Html\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    manifest: String,\n    version: String,\n    xmlns: String,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)\n});\nexport const Body = defineComponent({\n  // eslint-disable-next-line vue/no-reserved-component-names\n  name: \"Body\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)\n});\n"],"names":["removeUndefinedProps","props","value","setupForUseMeta","metaFactory","renderChild","ctx","useHead","_b","_a","globalProps","Title","defineComponent","_","slots","_c","Meta","meta","Head","_props"],"mappings":"sFAEA,MAAAA,EAAAC,GAAA,OAAA,YAAA,OAAA,QAAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAAC,CAAA,IAAAA,IAAA,MAAA,CAAA,EACAC,EAAA,CAAAC,EAAAC,IAAA,CAAAJ,EAAAK,KACAC,EAAA,IAAAH,EAAA,CAAA,GAAAJ,EAAAC,CAAA,EAAA,GAAAK,EAAA,OAAAA,CAAA,CAAA,EACA,IAAA,SAAA,OAAAD,GAAAG,GAAAC,EAAAH,EAAA,OAAA,UAAA,YAAAE,EAAA,KAAAC,GAAA,OAEAC,EAAA,CACA,UAAA,OACA,eAAA,OACA,UAAA,CACA,KAAA,QACA,QAAA,MACA,EACA,MAAA,CAAA,OAAA,OAAA,KAAA,EACA,gBAAA,CACA,KAAA,QACA,QAAA,MACA,EACA,YAAA,OACA,IAAA,OACA,UAAA,CACA,KAAA,QACA,QAAA,MACA,EACA,aAAA,OACA,YAAA,OACA,OAAA,CACA,KAAA,QACA,QAAA,MACA,EACA,GAAA,OACA,UAAA,OACA,GAAA,OACA,OAAA,OACA,SAAA,OACA,QAAA,OACA,UAAA,OACA,SAAA,OACA,KAAA,OACA,MAAA,OACA,KAAA,OACA,KAAA,OACA,WAAA,CACA,KAAA,QACA,QAAA,MACA,EACA,MAAA,OACA,SAAA,OACA,MAAA,OACA,UAAA,MACA,EAsEAC,EAAqCC,EAAA,CAErC,KAAA,QACA,aAAA,GACA,MAAAT,EAAA,CAAAU,EAAA,CAAA,MAAAC,CAAA,IAAA,WAKA,MAAA,CACA,QALAC,GAAAP,GAAAC,EAAAK,EAAA,UAAA,YAAAL,EAAA,KAAAK,KAAA,YAAAN,EAAA,KAAA,YAAAO,EAAA,WAAA,IAMA,CACA,CAAA,CACA,CAAA,EACAC,EAAoCJ,EAAA,CAEpC,KAAA,OACA,aAAA,GACA,MAAA,CACA,GAAAF,EACA,QAAA,OACA,QAAA,OACA,UAAA,OACA,KAAA,OACA,KAAA,QACA,eAAA,CAAA,OAAA,MAAA,CACA,EACA,MAAAP,EAAAF,GAAA,CACA,MAAAgB,EAAA,CAAA,GAAAhB,GACA,OAAAgB,EAAA,YACAA,EAAA,YAAA,EAAAA,EAAA,UACA,OAAAA,EAAA,WAEA,CACA,KAAA,CAAAA,CAAA,CACA,CACA,CAAA,CACA,CAAA,EAiCAC,EAAoCN,EAAA,CAEpC,KAAA,OACA,aAAA,GACA,MAAA,CAAAO,EAAAb,IAAA,IAAA,SAAA,OAAAE,GAAAC,EAAAH,EAAA,OAAA,UAAA,YAAAE,EAAA,KAAAC,GACA,CAAA","x_google_ignoreList":[0]}